/*
 * SelectedViewInterFrm.java
 *
 * Created on __DATE__, __TIME__
 */

package com.jakey.view;

import java.sql.Connection;
import java.sql.ResultSet;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.jakey.dao.SelectionDao;
import com.jakey.model.Course;
import com.jakey.model.Selection;
import com.jakey.util.DbUtil;

import Message.Message;
import client.TheClient;
import gui.DarkButton;
import gui.MyTable;
import user.User;

import java.awt.Dimension;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Color;

/**
 *
 * @author __USER__
 */
public class SelectedViewInterFrm extends javax.swing.JInternalFrame {

	SelectionDao selectionDao = new SelectionDao();
	private int courseId = -1;
	private User user;

	/** Creates new form SelectedViewInterFrm */
	public SelectedViewInterFrm(User user) {
		this.user = user;
		// getContentPane().setBackground(new Color(64, 116, 52));
		getContentPane().setBackground(new Color(240, 240, 240));
//		getContentPane().setBackground(new Color(0xEBCB8B));
		setPreferredSize(new Dimension(700, 433));
		initComponents();
		this.setLocation(200, 50);
		this.fillTable(new Course()); 
		
		MyTable.colorizeTabel(courseTable);
	}

	private void fillTable(Course course) {
		DefaultTableModel dtm = (DefaultTableModel) courseTable.getModel();
		dtm.setRowCount(0);
		int currentSno = Integer.valueOf(user.card).intValue();
		String tp = "SELECTION_LIST";
		Message message = new Message();
		message.setCheckCode(6);
		message.setType(tp);
		message.setNumber(currentSno);
		client.TheClient client = new TheClient();
		Message received;
		try {
			received = client.sendAndReceive(message);
			Vector<Course> TbB = new Vector<Course>();
			TbB = received.getCsvecVector();
			for (int i = 0; i < TbB.size(); i++) {
				Course temp = new Course();
				Vector v = new Vector();
				temp = TbB.get(i);
				v.add(temp.getCourseId());
				v.add(temp.getCourseName());
				v.add(temp.getCourseTime());
				v.add(temp.getCourseTeacher());
				dtm.addRow(v);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {

			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		courseTable = new MyTable();
		jb_selectionCancel = new DarkButton("");

		setClosable(true);
		setIconifiable(true);
		setTitle("\u5df2\u9009\u8bfe\u7a0b\u67e5\u770b");

		courseTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "课程编号", "课程名称", "上课时间", "任课老师" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		courseTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				courseTableMousePressed(evt);
			}
		});
		jScrollPane1.setViewportView(courseTable);

		jb_selectionCancel.setText("\u9000\u9009");
		jb_selectionCancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jb_selectionCancelActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addGap(316).addComponent(jb_selectionCancel))
								.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1,
										GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE).addGap(18)
						.addComponent(jb_selectionCancel).addGap(26)));
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>
		// GEN-END:initComponents

	private void courseTableMousePressed(java.awt.event.MouseEvent evt) {
		// int row = courseTable.getSelectedRow();
		// courseId = Integer.parseInt((String) courseTable.getValueAt(row, 0));
		int count = courseTable.getSelectedRow();
		String a = courseTable.getValueAt(count, 0).toString();
		String b = courseTable.getValueAt(count, 1).toString();
		String c = courseTable.getValueAt(count, 2).toString();
		String d = courseTable.getValueAt(count, 3).toString();

		int courseId = Integer.parseInt(a);
	}

	private void jb_selectionCancelActionPerformed(java.awt.event.ActionEvent evt) {
		int count = courseTable.getSelectedRow();
		String a = courseTable.getValueAt(count, 0).toString();
		String b = courseTable.getValueAt(count, 1).toString();
		String c = courseTable.getValueAt(count, 2).toString();
		String d = courseTable.getValueAt(count, 3).toString();

		int courseId = Integer.parseInt(a);
		if (courseId == -1) {
			JOptionPane.showMessageDialog(this, "请选择一门课程！");
			return;
		}
		int n = JOptionPane.showConfirmDialog(this, "确定要退选该门课程吗?");
		if (n == 0) {

			int currentSno = Integer.valueOf(user.card).intValue();
			Selection selection = new Selection(courseId, currentSno);

			Message message = new Message();
			message.setAllembracing(selection);
			message.setType("SELECTION_CANCEL");
			message.setCheckCode(6);
			client.TheClient client = new TheClient();

			Message recevied = new Message();
			try {
				recevied = client.sendAndReceive(message);
				if (recevied.isResponse()) {
					JOptionPane.showMessageDialog(this, "退选成功!");
					this.fillTable(new Course()); // TODO For Testing only
				} else {
					JOptionPane.showMessageDialog(this, "退选成功!");
				}
			} catch (Exception e) {
				// TODO Auto-generated catch block
				// e.printStackTrace();
				JOptionPane.showMessageDialog(this, "退选成功!");
			} finally {
				try {

				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JTable courseTable;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton jb_selectionCancel;
	// End of variables declaration//GEN-END:variables

}